name: Publish to EKS

on:
  workflow_call:
    inputs:
      eks_cluster_name:
        required: true
        type: string
      ecr_image_url:
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
    
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region us-east-1 --name ${{ inputs.eks_cluster_name }}
    
    - name: Create namespace if not exists
      run: kubectl create namespace nivo --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Get AWS Secrets
      id: aws-secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: |
          prod/nivo/postgres
          prod/github/oauth
          prod/app
        parse-json-secrets: true
    
    - name: Create Kubernetes Secrets
      run: |
        DB_USERNAME="${{ env.PROD_NIVO_POSTGRES_USERNAME }}"
        DB_PASSWORD="${{ env.PROD_NIVO_POSTGRES_PASSWORD }}"
        DB_HOST="${{ env.PROD_NIVO_POSTGRES_HOST }}"
        DB_PORT="${{ env.PROD_NIVO_POSTGRES_PORT }}"
        DB_NAME="${{ env.PROD_NIVO_POSTGRES_DBNAME }}"
        
        kubectl create secret generic nivo-secrets \
          --from-literal=DATABASE_URL="postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}" \
          --from-literal=GITHUB_OAUTH_CLIENT_ID="${{ env.PROD_GITHUB_OAUTH_GITHUB_OAUTH_CLIENT_ID }}" \
          --from-literal=GITHUB_OAUTH_CLIENT_SECRET="${{ env.PROD_GITHUB_OAUTH_GITHUB_OAUTH_CLIENT_SECRET }}" \
          --from-literal=GITHUB_OAUTH_CLIENT_REDIRECT_URI="${{ env.PROD_GITHUB_OAUTH_GITHUB_OAUTH_CLIENT_REDIRECT_URI }}" \
          --from-literal=JWT_SECRET="${{ env.PROD_APP_JWT_SECRET }}" \
          -n nivo \
          --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Update deployment image
      run: |
        IMAGE_URL="${{ inputs.ecr_image_url }}"
        sed -i "s|image: .*|image: $IMAGE_URL|g" apps/api/k8s/deployment.yaml
    
    - name: Publish to EKS
      run: kubectl apply -k apps/api/k8s/
    
    - name: Status check
      run: |
        kubectl rollout status deployment/nivo-api -n nivo --timeout=300s
        kubectl get pods -n nivo 